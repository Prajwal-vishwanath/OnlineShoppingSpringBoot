package com.lti.repository;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.lti.dto.Cart;
import com.lti.entity.Admin;
import com.lti.entity.Customer;
import com.lti.entity.Order;
import com.lti.entity.OrderItem;
import com.lti.entity.Product;
import com.lti.entity.Retailer;

@Component
public class EcommerceRepositoryImpl implements EcommerceRepository {

    
	Cart cart;
	
	@PersistenceContext
	EntityManager em;
	
	
	
	public Cart getCart() {
		
	}

	public void setCart(Cart cart) {
		
	}

	

	

	

	

	

	

	

	

	
	
	

	
	



	
	@Transactional
	public Order addorUpdateOrder(Order order) {
		
	}

	public Order findOrderById(long orderId) {
		
	}

	public List<Order> viewAllOrders() {
		
	}

	@Transactional
	public OrderItem addOrUpdateOrderItem(OrderItem orderItem) {
		
	}

	public OrderItem findOrderItemById(long orderItemId) {
	
	}

	public List<OrderItem> viewAllOrderItems() {
		
	}


	// -------------------------------------------------------------

	
	
//	public List<Order> viewCustomerOrderHistory(long customerId){
//		String jpql="select o from Order o where o.customerId =: custId ";
//		Query query = em.createQuery(jpql);
//		query.setParameter("custId", customerId);
//		List<Order> orders = query.getResultList();
//		return orders;
//	}

	
	public void createCart(long customerId) {
	 
	}
	
	public int searchProductinCart(Product product) {
		
	}
	
	public void increaseProductQuantityinCart(Product product,int quantity) {
		
	}
	
	public void addToCart(long productId) {
			
	}
	public double calculateProductPriceWithQuantityinCart(Product product,int quantity) {
		
	}
	public double calculateTotalPrice(List<Product> products,List<Integer> quantity) {
		
	}

	@Transactional
	public void addIntoOrderAndOrderItemByCart(Cart cart) {
		

}
